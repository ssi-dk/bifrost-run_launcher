name: Build and push Docker images to Dockerhub
on:
  push:
  release:
    types: [created, edited]

jobs:
    build-n-publish:
      name: Publish Docker üê≥ image üì¶ to Dockerhub
      runs-on: ubuntu-latest
      steps:
      - name: get_version
        uses: battila7/get-version-action@v2
        env:
          VERSION: ${{ steps.get_version.outputs.version }}
      - run: |
          echo "${{ env.VERSION }}
      - uses: actions/checkout@v2
      - name: Build and push Docker images (to dev)
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # optional
          password: ${{ secrets.DOCKER_PASSWORD }} # optional
          repository: ssidk/${{ github.event.repository.name }}
          tags: dev
          build_args: BUILD_ENV=dev
      - name: Build and push Docker images (to latest)
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # optional
          password: ${{ secrets.DOCKER_PASSWORD }} # optional
          repository: ssidk/${{ github.event.repository.name }}
          tags: latest
      - name: Build and push Docker images (to version)
        if: github.event_name == 'release'
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # optional
          password: ${{ secrets.DOCKER_PASSWORD }} # optional
          repository: ssidk/${{ github.event.repository.name }}
          tags: ${{ env.VERSION }}__NA # composite of code_version__resource_version
          push: ${{ startsWith(github.ref, 'refs/tags/') }} 
          build_args: CODE_VERSION=${{ env.VERSION }},RESOURCE_VERSION=NA
